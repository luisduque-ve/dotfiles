return {
  "CopilotC-Nvim/CopilotChat.nvim",
  event = "BufReadPost",
  cond = {{ .ai_support }},
  branch = "canary",
  dependencies = {
    { "zbirenbaum/copilot.lua" },
    { "nvim-lua/plenary.nvim" },
  },
  opts = {
    mappings = {
    reset = {
      normal = '',
      insert = '',
    },
  },
  },
  keys = {
    { "<leader>cc", "<CMD>CopilotChat<CR>", desc = "copilot_chat" },
    {
      "<leader>cb",
      function()
        local input = vim.fn.input("Question: ")
        if input ~= "" then
          require("CopilotChat").ask(input, { selection = require("CopilotChat.select").buffer })
        end
      end,
      desc = "buffer_as_context",
    },
    {
      "<leader>cv",
      function()
        local input = vim.fn.input("Question: ")
        if input ~= "" then
          require("CopilotChat").ask(input, { selection = require("CopilotChat.select").visual })
        end
      end,
      desc = "selection as context",
      mode = {"v"},
    },
    {
      "<leader>cs",
      function()
        require("CopilotChat").ask(require("CopilotChat.select").visual)
      end,
      desc = "ask_selection",
      mode = {"v"},
    }
  },
}
