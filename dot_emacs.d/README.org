#+TITLE: Emacs config
#+PROPERTY: header-args :tangle init.el

This is my personal Emacs configuration. I try to keep it simple while using as
much of evil-mode as possible.

Since this is tracked by Chezmoi, you don't need to modify this file on fresh
installs.

To regenerate the init.el file, simply go to the top of this file (inside
Emacs, of course) and press C-c C-c. After that, run org-babel-tangle.

* Core
** Custom file creation or loading

#+BEGIN_SRC elisp
(setq custom-file "~/.emacs.d/custom.el")

(unless (file-exists-p custom-file)
  (with-temp-buffer (write-file custom-file)))

(load custom-file)

#+END_SRC

** Use package setup
Keep this at the very top

#+BEGIN_SRC elisp
(require 'package)
(add-to-list 'package-archives '("gnu"   . "https://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
(require 'use-package)
(setq use-package-always-ensure t)
#+END_SRC

** UI

Color schema

#+BEGIN_SRC elisp
(use-package doom-themes
  :ensure t
  :config
  ;; Global settings (defaults)
  (setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
        doom-themes-enable-italic t) ; if nil, italics is universally disabled
  (load-theme 'doom-gruvbox-light t)

  ;; Enable flashing mode-line on errors
  (doom-themes-visual-bell-config)
  ;; Enable custom neotree theme (all-the-icons must be installed!)
  (doom-themes-neotree-config)
  ;; or for treemacs users
  (setq doom-themes-treemacs-theme "doom-atom") ; use "doom-colors" for less minimal icon theme
  (doom-themes-treemacs-config)
  ;; Corrects (and improves) org-mode's native fontification.
  (doom-themes-org-config))
#+END_SRC

Status bar
#+BEGIN_SRC elisp
(use-package doom-modeline
  :init (doom-modeline-mode 1))
#+END_SRC

Misc, font and core emacs ui configs
#+BEGIN_SRC elisp
(set-face-attribute 'default nil
                    :font "FiraCode Nerd Font Mono"
                    :height 170
                    :weight 'semi-bold)
(setq display-line-numbers-type 'relative)
(setq org-directory "~/org/")
#+END_SRC

* Evil

#+BEGIN_SRC elisp
(use-package evil
  :ensure t
  :init
  (setq evil-want-integration t) ;; This is optional since it's already set to t by default.
  (setq evil-want-keybinding nil)
  :config
  (evil-mode 1))
#+END_SRC

** Evil collection

#+BEGIN_SRC elisp
(use-package evil-collection
  :after evil
  :ensure t
  :config
  (evil-collection-init))
#+END_SRC
